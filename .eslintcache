[{"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\index.js":"1","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\App.jsx":"2","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\Logout.jsx":"3","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\Login.jsx":"4","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\layout\\ResponsiveDrawer.jsx":"5","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\Maintenance.jsx":"6","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\ListUser.jsx":"7","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\MatchHistory.jsx":"8","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\MatchPlayed.jsx":"9","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\ProfileUser.jsx":"10","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\Chat.jsx":"11","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\index.js":"12","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\Join\\Join.js":"13","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\Search\\UserSearchHeader.jsx":"14"},{"size":207,"mtime":1608437830844,"results":"15","hashOfConfig":"16"},{"size":1717,"mtime":1609771711788,"results":"17","hashOfConfig":"16"},{"size":111,"mtime":1608437830871,"results":"18","hashOfConfig":"16"},{"size":3953,"mtime":1608437830867,"results":"19","hashOfConfig":"16"},{"size":6520,"mtime":1609770645164,"results":"20","hashOfConfig":"16"},{"size":818,"mtime":1609769365751,"results":"21","hashOfConfig":"16"},{"size":3683,"mtime":1609772009606,"results":"22","hashOfConfig":"16"},{"size":129,"mtime":1609772268053,"results":"23","hashOfConfig":"16"},{"size":406,"mtime":1609772293559,"results":"24","hashOfConfig":"16"},{"size":116,"mtime":1609770749052,"results":"25","hashOfConfig":"16"},{"size":105,"mtime":1609772260004,"results":"26","hashOfConfig":"16"},{"size":32,"mtime":1609769365763,"results":"27","hashOfConfig":"16"},{"size":918,"mtime":1609769365743,"results":"28","hashOfConfig":"16"},{"size":1201,"mtime":1609771142066,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"145cw29",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\index.js",[],["61","62"],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\App.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\Logout.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\Login.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\layout\\ResponsiveDrawer.jsx",["63","64"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport VideogameAssetIcon from '@material-ui/icons/VideogameAsset';\r\nimport AnnouncementIcon from \"@material-ui/icons/Announcement\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Logo from \"../images/Logo.svg\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  logoWrapper: {\r\n    background: \"#004c9e\",\r\n    padding: \"1rem\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    height: \"24px\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    background: \"#004c9e\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n  },\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={clsx(classes.logoWrapper, classes.toolbar)}>\r\n        <img className={classes.logo} src={Logo} alt=\"\" />\r\n      </div>\r\n      <Divider />\r\n      <List>\r\n        <Link to=\"/listUser\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ListAltIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"List User\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/profileUser\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Profile User\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/matchHistory\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AssessmentIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Match History\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/matchPlayed\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <VideogameAssetIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Match Played\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/chat\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ChatIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Chat\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n      <Divider />\r\n      \r\n      <List>\r\n        <Link to=\"/logout\" className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Logout\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            UHD Team\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\Maintenance.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\ListUser.jsx",["65","66"],"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Search from \"./../components/Search/UserSearchHeader\";\r\n\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#004c9e\",\r\n    color: theme.palette.common.white,\r\n    fontSize: 20,\r\n  },\r\n  body: {\r\n    fontSize: 20,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\nconst loadData = (id, result, room, level, competitor, date) => {\r\n  return { id, result, room, level, competitor, date };\r\n};\r\n// const rows = [\r\n//   loadData(1, true, \"solo\", 5, \"nvh\", \"22/12/2020\"),\r\n//   loadData(2, false, \"play\", 4, \"ntd\", \"30/12/2020\"),\r\n//   loadData(3, false, \"hard\", 3, \"ntd\", \"30/12/2020\"),\r\n//   loadData(4, true, \"fun\", 2, \"ntd\", \"30/12/2020\"),\r\n// ];\r\nconst History = () => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState([]);\r\n  const history = useHistory();\r\n  //const username = \"nvh\";\r\n  const [name] = useState(localStorage.getItem(\"currentName\") || \"\");\r\n\r\n  const handleRowClick = (e) => {\r\n    history.push(\"/room\");\r\n  };\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  useEffect(async () => {\r\n    const res = await axios(`http://localhost:4000/users/history/${name}`);\r\n    console.log(res.data);\r\n    setRows([...res.data]);\r\n  }, [rows.id]);\r\n  return (\r\n    <Container>\r\n      <h1>Danh sách người dùng</h1>\r\n      <Grid container justify=\"flex-end\" alignItems=\"center\">\r\n        <Search />\r\n        </Grid>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        style={{ marginTop: \"25px\", marginBottom: \"25px\" }}\r\n      >\r\n        \r\n      </Grid>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>User</StyledTableCell>\r\n              <StyledTableCell>Email</StyledTableCell>\r\n              <StyledTableCell>Match</StyledTableCell>\r\n              <StyledTableCell>Cup</StyledTableCell>\r\n              <StyledTableCell>Rank</StyledTableCell>\r\n              <StyledTableCell>Win Ratio</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <StyledTableRow key={row.id} hover onClick={handleRowClick}>\r\n                <StyledTableCell style={{ padding: 5 }}>  \r\n                </StyledTableCell>\r\n                <StyledTableCell>        \r\n                </StyledTableCell>\r\n                <StyledTableCell>{row.room}</StyledTableCell>\r\n                <StyledTableCell>\r\n                </StyledTableCell>\r\n                <StyledTableCell>{row.competitor}</StyledTableCell>\r\n                <StyledTableCell>{row.date}</StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\MatchHistory.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\MatchPlayed.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\ProfileUser.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\pages\\Chat.jsx",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\index.js",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\Join\\Join.js",[],"D:\\WEB\\REACT\\DACK\\tictactoe-admin-client\\src\\components\\Search\\UserSearchHeader.jsx",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":16,"column":8,"nodeType":"73","messageId":"74","endLine":16,"endColumn":29},{"ruleId":"71","severity":1,"message":"75","line":19,"column":8,"nodeType":"73","messageId":"74","endLine":19,"endColumn":24},{"ruleId":"71","severity":1,"message":"76","line":36,"column":7,"nodeType":"73","messageId":"74","endLine":36,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":61,"column":6,"nodeType":"79","endLine":61,"endColumn":15,"suggestions":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'SupervisorAccountIcon' is defined but never used.","Identifier","unusedVar","'AnnouncementIcon' is defined but never used.","'loadData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [name, rows.id]",{"range":"86","text":"87"},[1992,2001],"[name, rows.id]"]